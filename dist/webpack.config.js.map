{"version":3,"sources":["../webpack.config.js"],"names":["path","require","HtmlWebpackPlugin","CopyPlugin","MiniCssExtractPlugin","ESLintPlugin","module","exports","env","argv","isProd","mode","isDev","filename","ext","plugins","base","template","inject","patterns","from","resolve","__dirname","to","push","context","entry","main","output","clean","extensions","alias","devServer","port","open","hot","watchFiles","devtool","rules","test","use","loader","exclude","options","presets"],"mappings":"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","sourcesContent":["const path = require('path')\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\nconst CopyPlugin = require('copy-webpack-plugin')\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin')\nconst ESLintPlugin = require('eslint-webpack-plugin')\n\nmodule.exports = (env, argv) => {\n\n    const isProd = argv.mode === 'production'\n    const isDev = !isProd\n\n    const filename = ext => `[name].[contenthash].bundle.${ext}`\n\n    const plugins = () => {\n        const base = [\n            new HtmlWebpackPlugin({\n                template: './index.html',\n                inject: 'body',\n            }),\n            new CopyPlugin({\n                patterns: [\n                    {\n                        from: path.resolve(__dirname, 'src/assets/img/ico', 'favicon.ico'),\n                        to: path.resolve(__dirname, 'dist'),\n                    },\n                ],\n            }),\n            new MiniCssExtractPlugin({\n                filename: filename('css')\n            }),\n        ]\n        if(isDev) {\n            base.push(new ESLintPlugin())\n        }\n        return base\n    }\n\n    return {\n        context: path.resolve(__dirname, 'src'),\n        entry: {\n            main: [ 'core-js/stable', 'regenerator-runtime/runtime', './index.js'],\n        },\n        output: {\n            path: path.resolve(__dirname, 'dist'),\n            filename: filename('js'),\n            clean: true,\n        },\n        resolve: {\n            extensions: ['.js'],\n            alias: {\n                '@': path.resolve(__dirname, 'src'),\n                '@core': path.resolve(__dirname, 'src', 'core'),\n            },\n        },\n        devServer: {\n            port: 3000,\n            open: true,\n            hot: true,\n            watchFiles: './',\n        },\n        devtool: isDev ? 'source-map' : false,\n        plugins: plugins(),\n        module: {\n            rules: [\n                {\n                    test: /\\.s[ac]ss$/i,\n                    use: [\n                        MiniCssExtractPlugin.loader,\n                        // Translates CSS into CommonJS\n                        'css-loader',\n                        // Compiles Sass to CSS\n                        'sass-loader',\n                    ],\n                },\n                {\n                    test: /\\.m?js$/,\n                    exclude: /node_modules/,\n                    use: {\n                        loader: 'babel-loader',\n                        options: {\n                            presets: ['@babel/preset-env']\n                        }\n                    }\n                },\n            ],\n        },\n    }\n}"],"file":"webpack.config.js"}